
apply plugin: 'findbugs'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'war'


// For the entire project
repositories {
    mavenCentral()
}


defaultTasks 'all'

// Kinda silly. Remove war file.
task removeWar(type: Delete)  {
  delete('./build/libs/repository_template.war')
}


// Makes emacs projects easier to manage. We used to have all targets on makefiles.
task all() {
     dependsOn  jar, compileTestJava, findbugsMain, findbugsTest, test, removeWar
}


configurations {
    testManagedCompile { extendsFrom testCompile }
    testManagedRuntime { extendsFrom testRuntime }
}

dependencies {

    // Critial JSON Web Token RFC-7519 Implementation from Ping Identity.
    // https://bitbucket.org/b_c/jose4j/wiki/Home
    compile 'org.bitbucket.b_c:jose4j:0.5.0'
    testCompile 'org.bitbucket.b_c:jose4j:0.5.0'

    // Cryptography
    compile 'org.bouncycastle:bcprov-jdk15on:1.54'
    compile 'org.bouncycastle:bcprov-ext-jdk15on:1.54'
    compile 'org.apache.directory.studio:org.apache.commons.codec:1.8'

    // Resteasy client libraries
    compile 'org.jboss.resteasy:resteasy-client:3.0.16.Final'
    compile group: 'org.jboss.resteasy', name: 'resteasy-multipart-provider', version: '3.0.16.Final'


    // Unit/System Testing.
    testCompile 'junit:junit:4.12'
    // http://joel-costigliola.github.io/assertj/
    testCompile 'org.assertj:assertj-core:3.3.0'

    // Logging
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.apache.logging.log4j:log4j:2.5'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'

    // Lombok
    compile 'org.projectlombok:lombok:1.16.6'
    testCompile 'org.projectlombok:lombok:1.16.6'

    
    /////////////////////////////////////////////////////////////////////////
    //                                Jackson                              //
    /////////////////////////////////////////////////////////////////////////
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1'
    compile 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.4.1'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-xml-provider:2.4.1'
    compile 'com.fasterxml.uuid:java-uuid-generator:3.1.4'
    compile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.4.1'
    
    // Apache Commons 
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-math3:3.4.1'
    compile 'org.apache.directory.studio:org.apache.commons.io:2.4'
    compile 'commons-beanutils:commons-beanutils:1.9.2'

    // Findbugs
    compile'com.google.code.findbugs:findbugs:3.0.1'
    compile'com.google.code.findbugs:jsr305:3.0.0'
    compile'com.google.code.findbugs:annotations:3.0.0'

    // javax.json
    compile 'javax.json:javax.json-api:1.0'
    compile 'javax.ws.rs:javax.ws.rs-api:2.0'
        
    // Jackson Module JsonSchema
    compile 'com.fasterxml.jackson.module:jackson-module-jsonSchema:2.3.0'
}



jar {
    archiveName = 'sagneta.jar'
    manifest {
        name = 'sagneta'
        instruction 'Class-Path', '.'
        instruction 'Main-Class', 'com.sagneta.Main'
        instruction 'Private-Package', 'com.sagneta'
        instruction 'Bundle-Vendor', 'Just Me Inc.'
        instruction 'Bundle-Description', 'Example jar file for Stephen Agneta'
        instruction 'Bundle-DocURL', 'https://github.com/sagneta'
        //instruction 'Bundle-Activator', 'com.sagneta.demo.SampleActivator'
    }

    // The jose4j  uses signed jars which will not match our manifest so I remove them.
    // http://stackoverflow.com/a/14441628/3038736
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'     

    
    // Include all of the dependencies. It explodes each jar file into class files and inserts the class files.
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}



// I want to see all deprecations.
// Set the proper encoding for Java compiler. Usually this isn't needed, but it is in the 
// OpenShift environment.
// Change Compile to JavaCompile when moving to Gradle 2.X
tasks.withType(JavaCompile) { 
    options.compilerArgs << "-Xlint:all" 
    options.compilerArgs << "-Xlint:-processing"
    options.compilerArgs << "-Xdiags:verbose" 
    options.encoding = 'UTF-8'
} 


///////////////////////////////////////////////////////////////////////////////////////////////////////
// The html report can be found under ./clients/server-core/build/reports/findbugs                   //
// If you want an XML report that can be fed into the findbugs eclipse plugin set xml.enabled = true //
// and html.enabled = false. You can't have both true at the same time which is kinda stupid but     //
// there ya go.                                                                                      //
///////////////////////////////////////////////////////////////////////////////////////////////////////
tasks.withType(FindBugs) {
  reports {
      xml.enabled = false
      html.enabled = true
  }
}
